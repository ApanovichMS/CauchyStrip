clc
%Ввод исходных данных
beta0=input('Введите начальную точку для поиска в формате <[__,__]>\nbeta0=');
f0=input('Введите точку для поиска f(x,y) в формате <[__,__]>\nf0= ');

%Формирование матриц начальных данных
F1=input('Задайте матрицу f по столбцам в формате <[столбец 1 ; столбец 2; и т.д.]>\nf= ');
F=F1'

C1=input('Задайте матрицу С по столбцам в формате <[столбец 1 ; столбец 2;и т.д.]> \nC=');
C=C1'
%Переход в систему координат Matlab из декартовых
beta1=[beta0(2)+1,(beta0(1)+1)];
f1=[f0(2)+1,(f0(1)+1)];
%Проверка марицы коэффициентов
if abs(C(beta1(1),beta1(2)))<=sum(abs(C(beta1(1),:))-abs(C(beta1(1),beta1(2))))
 disp('Ошибка ввода матрицы С')
 C1=input('Задайте матрицу С по столбцам в формате <[столбец 1 ; столбец2; и т.д.]>\nC= ');
C=C1'
end
%Перестановка строк массивов С и F симметрично относительно горизонтальной оси
C_work=flipud(C);
f_work=flipud(F);
% Вектор строки для Теплицевой матрицы из матрицы коэффициентов С
i=size(f_work,2); % количество столбцов матрицы начальных данных
p=size(C_work,2); % количество столбцов матрицы коэффициентов
a=C_work(end,:);
e=beta1(2); % номер столбца, где расположен элемент матрицы коэффициентов, по которому ищется значение функции
column_c=zeros(i-(p-1),1);
col=1;
while e>=1
 column_c(col)=a(e);
 col=col+1;
 e=e-1;
end
column_c
e=beta1(2);
row_c=zeros(1,i-(p-1));
r=1;
for m=e:length(a)
 row_c(r)=a(e);
 r=r+1;
 e=e+1;
 end
row_c
%Построение Теплицевой матрицы
disp('Теплицева матрица')
neizv_1=toeplitz(colomn_c, row_c) %общая матрица для вычисления неизвестных
%k - нормер полосы
%i - номер сдвига
disp('Вычисление неизвестных')
for k=beta1(1):1:f1(1)
 fprintf('Номер полосы %3.0f\n',k)
 b=zeros(size(neizv_1,1),1);

 for i=0:(size(neizv_1,1)-1)
 f_iter=f_work((k-(size(C_work,1)-1)):k,(1+i):i+size(C_work,2));
 f_new=f_iter.*C_work;
 b(i+1)=-(sum(sum(f_new)));
 end

 elements=linsolve(neizv_1,b)

 for m=1:size(neizv_1,1)
 f_work(k,beta1(2)-1+m)=elements(m);
 end
end
fprintf('Искомое значение функции f в точке [%4.0f,%4.0f] равно %8.4f\n',f0(1),f0(2),f_work(f1(1),f1(2)))
